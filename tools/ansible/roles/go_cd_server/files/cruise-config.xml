<?xml version="1.0" encoding="utf-8"?>
<cruise xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="cruise-config.xsd" schemaVersion="75">
  <server artifactsdir="artifacts" siteUrl="https://stlerappdev.perficient.com:8154" purgeStart="5.0" purgeUpto="10.0" jobTimeout="60" commandRepositoryLocation="default">
    <security>
      <ldap uri="ldaps://STLCOLODC01.perficient.com:636/" managerDn="cn=LDAP Enterprise Review,ou=System Accounts,ou=IT,dc=perficient,dc=com" encryptedManagerPassword="zDw716p/Hld7WEyIJF6Dw6N5YJkynW5t" searchFilter="(cn={0})">
        <bases>
          <base value="OU=Employees,DC=perficient,DC=com" />
        </bases>
      </ldap>
      <passwordFile path="/etc/go/passwd" />
      <admins>
        <user>donovan.mikrot</user>
      </admins>
    </security>
    <mailhost hostname="mail2.perficient.com" port="25" tls="false" from="etm-go@perficient.com" admin="donovan.mikrot@perficient.com" />
  </server>
  <pipelines group="etm">
    <pipeline name="etm-build" labeltemplate="${COUNT}-${git[:7]}" isLocked="false">
      <materials>
        <git url="git@github.com:Perficient/ent-talent-mgmt.git" materialName="git">
          <filter>
            <ignore pattern="docs/**/*" />
            <ignore pattern="tools/**/*" />
          </filter>
        </git>
      </materials>
      <stage name="install" cleanWorkingDir="true">
        <jobs>
          <job name="npm">
            <tasks>
              <exec command="npm" workingdir="ent-talent-mgmt">
                <arg>install</arg>
                <runif status="passed" />
              </exec>
            </tasks>
          </job>
        </jobs>
      </stage>
      <stage name="test" fetchMaterials="false">
        <jobs>
          <job name="unit-test">
            <tasks>
              <exec command="./gradlew" workingdir="ent-talent-mgmt">
                <arg>test</arg>
                <runif status="passed" />
              </exec>
            </tasks>
            <artifacts>
              <test src="ent-talent-mgmt/build/test-results/*.xml" dest="etm-test-results" />
            </artifacts>
          </job>
          <job name="ui-test">
            <tasks>
              <exec command="grunt" workingdir="ent-talent-mgmt">
                <arg>test</arg>
                <runif status="passed" />
              </exec>
            </tasks>
            <artifacts>
              <test src="ent-talent-mgmt/build/js-test-reports/*.xml" dest="etm-test-results" />
            </artifacts>
          </job>
        </jobs>
      </stage>
      <stage name="build" fetchMaterials="false">
        <jobs>
          <job name="package">
            <tasks>
              <exec command="./gradlew" workingdir="ent-talent-mgmt">
                <arg>-Pprod</arg>
                <arg>bootRepackage</arg>
                <runif status="passed" />
              </exec>
            </tasks>
            <artifacts>
              <artifact src="ent-talent-mgmt/build/libs/*.war" dest="etm-wars" />
              <artifact src="ent-talent-mgmt/build/libs/*.war.original" dest="etm-wars" />
              <artifact src="ent-talent-mgmt/build/libs/*.jar" dest="etm-jars" />
              <artifact src="ent-talent-mgmt/build/libs/*.jar.original" dest="etm-jars" />
            </artifacts>
          </job>
        </jobs>
      </stage>
    </pipeline>
    <pipeline name="etm-deploy-uat" labeltemplate="${etm-build}" isLocked="true" template="etm-deploy">
      <params>
        <param name="inventory">uat</param>
        <param name="url">https://stlerappuat.perficient.com:8443</param>
      </params>
      <materials>
        <pipeline pipelineName="etm-build" stageName="build" />
        <git url="git@github.com:Perficient/ent-talent-mgmt.git">
          <filter>
            <ignore pattern="ent-talent-mgmt/**/*" />
            <ignore pattern="docs/**/*" />
            <ignore pattern="tools/ssl/**/*" />
          </filter>
        </git>
      </materials>
    </pipeline>
    <pipeline name="etm-test-uat" labeltemplate="${etm-deploy-uat}" isLocked="false">
      <materials>
        <pipeline pipelineName="etm-deploy-uat" stageName="verify" />
        <git url="git@github.com:Perficient/ent-talent-mgmt.git" />
      </materials>
      <stage name="install">
        <jobs>
          <job name="npm">
            <tasks>
              <exec command="npm" workingdir="ent-talent-mgmt">
                <arg>install</arg>
                <runif status="passed" />
              </exec>
            </tasks>
          </job>
        </jobs>
      </stage>
      <stage name="test" fetchMaterials="false">
        <jobs>
          <job name="acceptance-test">
            <tasks>
              <exec command="env" workingdir="ent-talent-mgmt">
                <arg>DISPLAY=:99</arg>
                <arg>grunt</arg>
                <arg>protractor:uat</arg>
                <runif status="passed" />
              </exec>
            </tasks>
            <artifacts>
              <test src="ent-talent-mgmt/build/e2e-test-reports/*.xml" dest="etm-test-results" />
            </artifacts>
          </job>
        </jobs>
      </stage>
    </pipeline>
  </pipelines>
  <templates>
    <pipeline name="etm-deploy">
      <stage name="deploy">
        <jobs>
          <job name="server">
            <tasks>
              <fetchartifact pipeline="etm-build" stage="build" job="package" srcdir="etm-wars">
                <runif status="passed" />
              </fetchartifact>
              <exec command="/bin/bash" workingdir="tools/ansible">
                <arg>-c</arg>
                <arg>ansible-playbook appservers.yml -i #{inventory} -t ci_deploy -e "artifact_dir=../../etm-wars" --vault-password-file ~/.ansible/vault_key.txt</arg>
                <runif status="passed" />
              </exec>
            </tasks>
          </job>
        </jobs>
      </stage>
      <stage name="verify" fetchMaterials="false">
        <jobs>
          <job name="started">
            <tasks>
              <exec command="wget">
                <arg>--retry-connrefused</arg>
                <arg>--waitretry=60</arg>
                <arg>--tries=20</arg>
                <arg>--no-check-certificate</arg>
                <arg>#{url}</arg>
                <runif status="passed" />
              </exec>
            </tasks>
          </job>
        </jobs>
      </stage>
    </pipeline>
  </templates>
  <agents>
  </agents>
</cruise>
