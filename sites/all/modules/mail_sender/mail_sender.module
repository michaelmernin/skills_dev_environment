<?php

require DRUPAL_ROOT . '/' . libraries_get_path('phpmailer') . '/' . 'class.phpmailer.php';
/**
 * @file
 * 
 * This is the mail_sender module
 * 
 * 
 */

/**
 * Implements hook_cron().
 */
function mail_sender_cron() {
  mail_sander_task();
}

/**
 * 
 * This funciton is to send e-mail
 * 
 * @param array $address  e-mail addressee
 * @param string $subject  The e-mail subject
 * @param string $body The parameter to send mail
 */
function mail_sender_send($address, $subject, $body, $isHtml) {

  try {
    $mail = new PHPMailer(true); //New instance, with exceptions enabled
    $mail->IsSMTP();
    $mail->SMTPAuth = true;
    $mail->Port = variable_get('smtp_port');
    $mail->Host = variable_get('smtp_host');
    $mail->Username = variable_get('smtp_username');
    $mail->Password = variable_get('smtp_password');
    $mail->AddReplyTo($mail->Username, "Perficient");

    $mail->From = variable_get('smtp_fromname');
    $mail->FromName = variable_get('smtp_fromname');
    $mail->CharSet = 'iso-8859-1';


    if (is_array($address))
      foreach ($address as $to)
        $mail->AddAddress($to);
    else
      $mail->AddAddress($address);

    $mail->Subject = $subject;
    $mail->AltBody = "To view the message, please use an HTML compatible email viewer!"; // optional, comment out and test
    $mail->WordWrap = 80; // set word wrap
    $mail->MsgHTML($body);
    $mail->IsHTML($isHtml);
    
//    dd($mail);
    
    return $mail->Send();
  } catch (phpmailerException $e) {
//    dd($e->errorMessage());
  }
}

/**
 * This function is to send mail through template
 * 
 * @param array $address  e-mail addressee
 * @param string $subject  The e-mail subject
 * @param array $params The parameter to send mail
 * @parsm string $templateName The templateName,the template is location 
 *                             at drupal_get_path('module', 'mail_sender') . '/templates/'
 * 
 * @return string The result of send mail
 *         1 stand for send e-mail success
 */
function mail_sender_mail_template($address, $subject, $params, $templateName) {

  $templatePath = drupal_get_path('module', 'mail_sender') . '/templates/' . $templateName;
  if (file_exists($templatePath))
    $template = file_get_contents($templatePath);
  else {
//    dd('File not exist' . $templatePath);
    $template = '<div>Jack</div>';
  }

//  dd($template);


  $content = '';
  $key = '';
  $isKey = false;
  for ($i = 0; $i < strlen($template); $i++) {
    if ($template[$i] == '[') {
      $isKey = true;
    }
    else if ($template[$i] == ']') {
      $content .= $params[$key];
      $isKey = false;
      $key = '';
    }
    else if ($isKey == true) {
      $key = $key . $template[$i];
    }
    else {
      $content = $content . $template[$i];
    }
  }

//  dd($content);
  $mail_insert = db_insert('prs_mail');

  $create_time = 0;
  $field = array(
    'pmid' => 0,
    'address' => $address,
    'subject' => $subject,
    'body' => $content,
    'status' => 0,
    'createtime' => $create_time);

  $mail_insert->fields($field)->execute();
  return mail_sender_send($address, $subject, $content, true);
}

function mail_sender_template_adapter($address, $params, $type) {
  $subject = 'Enterprise Review Notification';
  switch ($type) {
    case 0:
      if ($params['type'] == 'counselee') {
        $subject = $params['reviewname'] . " has begun.Please select peers for youself before" . $params['datetime'];
        $templateName = 'new_review_started_counselee.tpl.php';
      }
      else if ($params['type'] == 'counselor') {
        $subject = $params['reviewname'] . " has begun.Please select peers for " . $params['username'] . " before " . $params['datetime'];
        $templateName = 'new_review_started_counselor.tpl.php';
      }
      break;
    default:
      break;
  }
  mail_sender_mail_template($address, $subject, $params, $templateName);
}

function mail_sander_task() {

  $max_send = 10;

  $mail_query = db_select('prs_mail', 'mail');
  $mail_query->addField('mail', 'pmid');
  $mail_query->addField('mail', 'address');
  $mail_query->addField('mail', 'subject');
  $mail_query->addField('mail', 'body');
  $mail_query->condition('mail.status', 0);

  $mail_query->range(0, $max_send);
  $mail_result = $mail_query->execute()->fetchAll();
  $mail_id = array();

  foreach ($mail_result as $task) {
    $id = $task->pmid;
    $address = $task->address;
    $subject = $task->subject;
    $body = $task->body;
    $send_message = mail_sender_send($address, $subject, $body, true);
    if ($send_message == '1') {
      $mail_id[] = $id;
    }
    else {
      watchdog('mail', $send_message, WATCHDOG_ERROR);
    }
  }

  foreach ($mail_id as $id) {
    try {
      $delete_query = "delete from prs_mail where pmid = $id";
      db_query($delete_query);
    } catch (Exception $e) {
      watchdog('mail sender task', 'Error delete mail sender task.', array(), WATCHDOG_ERROR);
    }
  }

  return true;
}