<?php

/**
 * @file
 * 
 * This is the counselee module
 * 
 * 
 */
function counselee_menu() {
  $items['mydashboard'] = array(
    'title' => 'My Dashboard',
    'page callback' => 'dashboard_display',
    'page arguments' => array(),
    'access arguments' => array('access to my dashboard'),
    'file' => 'files/dashboard.pages.inc',
  );
  $items['newselfreview'] = array(
    'title' => 'Create My Review',
    'page callback' => 'show_pr_list',
    'access arguments' => array('access to my dashboard'),
    'type' => MENU_NORMAL_ITEM,
    'file' => 'files/dashboard.pages.inc',
    'weight' => 5,
  );
  $items['accessdenied'] = array(
    'title' => 'Access Denied',
    'type' => MENU_CALLBACK,
    'page callback' => 'accessdenied',
    'page arguments' => array(),
    'access callback' => TRUE,
    'file' => 'files/dashboard.pages.inc',
  );

  $items['feedbacksubmitsuccess'] = array(
    'title' => 'Feedback Submitted Successfully',
    'type' => MENU_CALLBACK,
    'page callback' => 'feedbacksubmitsuccess',
    'page arguments' => array(),
    'access callback' => TRUE,
    'file' => 'files/dashboard.pages.inc',
  );

  $items['watchstatus'] = array(
    'title' => 'Watch status',
    'page callback' => 'show_pr_list',
    'access arguments' => array('access to my dashboard'),
    'type' => MENU_CALLBACK,
    'file' => 'files/dashboard.pages.inc',
  );
  $items['watchstatus/basicinfo/%'] = array(
    'title' => 'Basic Information',
    'page callback' => 'watch_basic_information',
    'page arguments' => array(2),
    'access arguments' => array('access to my dashboard'),
    'type' => MENU_LOCAL_TASK,
    'file' => 'files/watch_review_status.inc',
  );
  $items['watchstatus/selectpeers/%'] = array(
    'title' => 'Select Peers',
    'page callback' => 'display_select_peers_page',
    'page arguments' => array(2),
    'access arguments' => array('access to my dashboard'),
    'type' => MENU_LOCAL_TASK,
    'file' => 'files/watch_review_status.inc',
  );
  $items['watchstatus/submitupdate'] = array(
    'title' => 'Submit Updates',
    'page callback' => 'submit_peer_update',
    'page arguments' => array(),
    'access arguments' => array('access to my dashboard'),
    'type' => MENU_CALLBACK,
    'file' => 'files/watch_review_status.inc',
  );
  $items['watchstatus/selfassessment/%'] = array(
    'title' => 'Self Assessment',
    'page callback' => 'display_self_assessment',
    'page arguments' => array(2),
    'access arguments' => array('access to my dashboard'),
    'type' => MENU_LOCAL_TASK,
    'file' => 'files/watch_review_status.inc',
  );
  $items['watchstatus/viewassessment/%'] = array(
    'title' => 'View Assessment',
    'page callback' => 'load_self_assessment',
    'page arguments' => array(2),
    'access arguments' => array('access to my dashboard'),
    'type' => MENU_LOCAL_TASK,
    'file' => 'files/review_assessment_modification.inc',
  );
  $items['watchstatus/submitcounselorassessment'] = array(
    'title' => 'Submit Counselor Sheet',
    'page callback' => 'submit_counselor_assessment',
    'page arguments' => array(),
    'access arguments' => array('access to my dashboard'),
    'type' => MENU_CALLBACK,
    'file' => 'files/watch_review_status.inc',
  );

  $items['watchstatus/rejectcounseleeassessment'] = array(
    'title' => 'Rejct Counselee\'s Assessment',
    'page callback' => 'reject_counselee_assessment',
    'page arguments' => array(),
    'access arguments' => array('access to my dashboard'),
    'type' => MENU_CALLBACK,
    'file' => 'file/watch_review_status.inc',
  );
  $items['watchstatus/approvecounseleeassessment'] = array(
    'title' => 'Approve Counselee\'s Assessment',
    'page callback' => 'approve_counselee_assessment',
    'page arguments' => array(),
    'access arguments' => array('access to my dashboard'),
    'type' => MENU_CALLBACK,
    'file' => 'file/watch_review_status.inc',
  );


  $items['counseleeconfirmresult/%'] = array(
    'title' => 'Counselee Confirm Review Result',
    'page callback' => 'counselee_confirm_review_result',
    'type' => MENU_LOCAL_TASK,
    'page arguments' => array(1),
    'access arguments' => array('access to my dashboard'),
    'file' => 'files/page_audit_review.inc',
  );

  $items['audit-review/approve-review-result'] = array(
    'title' => 'Counselee Approve Review Result',
    'page callback' => 'approve_review_result',
    'page arguments' => array(),
    'access arguments' => array('access to my dashboard'),
    'type' => MENU_CALLBACK,
    'file' => 'files/page_audit_review.inc',
  );

  $items['audit-review/disapprove-review-result'] = array(
    'title' => 'Counselee Disapprove Review Result',
    'page callback' => 'disapprove_review_result',
    'page arguments' => array(),
    'access arguments' => array('access to my dashboard'),
    'type' => MENU_CALLBACK,
    'file' => 'files/page_audit_review.inc',
  );

  return $items;
}

function counselee_permission() {
  return array(
    'access to my dashboard' => array(
      'title' => t('Access to my dashboard'),
    ),
//    'access to peer review' => array(
//      'title' => t('Access to peer review form'),
//    ),
  );
}

function counselee_block_info() {
  $blocks['user_status'] = array(
    'info' => t('User Status View'),
  );
  $blocks['my_work_stage'] = array(
    'info' => t('My Working Stage'),
    'cache' => DRUPAL_NO_CACHE,
  );
  // $blocks['select_peers'] = array(
  //   'info' => t('Select Peers'),
  // 'cache' => DRUPAL_NO_CACHE, // no cache
  //   'cache' => DRUPAL_NO_CACHE,
// );
  return $blocks;
}

function counselee_block_view($delta = '') {
//The $delta parameter tells us which block is being requested.
  switch ($delta) {
    case 'user_status':
      appendCSSJS();
//            $block['subject'] = render_subject_use_image('Configure Timeslot');
      $status_info = select_reviewer_status_from_BD();
      $block['content'] = theme('user_status_view', array('status_info' => $status_info));
      break;
    case 'my_work_stage':
      $counseleePeers = counselee_select_peers('counselee', get_current_user_name());
      $counselorPeers = counselee_select_peers('counselor', get_current_user_name());
      $reviewList = counselee_do_peersreview(get_current_user_name());
      $self_review_finished = get_self_review_finished_list(get_current_user_name());
      $counselee_confirm_review = get_confirm_review_result(get_current_user_name());
      $block['content'] = theme('my_working_list_view', array('counseleePeers' => $counseleePeers,
        'counselorPeers' => $counselorPeers,
        'reviewList' => $reviewList,
        'self_review_finished' => $self_review_finished,
        'counselee_confirm_review' => $counselee_confirm_review,
      ));
      break;
  }
  return $block;
}

function counselee_theme() {
  return array(
    'user_status_view' => array(
      'variables' => array('status_info' => NULL),
      'path' => drupal_get_path('module', 'counselee') . '/templates',
      'template' => 'user_status_view',),
    'my_working_list_view' => array(
      'variables' => array('counseleePeers' => NULL,
        'counselorPeers' => NULL,
        'reviewList' => NULL,
        'self_review_finished' => NULL,
        'counselee_confirm_review' => NULL,
      ),
      'path' => drupal_get_path('module', 'counselee') . '/templates',
      'template' => 'my_working_list',),
    'select_peers' => array(
      'variables' => array('all_employee_array' => NULL, 'selected_array' => NULL, 'unselected_array' => NULL, 'userId_flag' => NULL, 'peers_status' => NULL,),
      'path' => drupal_get_path('module', 'counselee') . '/templates',
      'template' => 'select_peers',),
    'watch_basic_info' => array(
      'variables' => array('basic_info' => NULL, 'myInfo' => NULL),
      'path' => drupal_get_path('module', 'counselee') . '/templates',
      'template' => 'watch_basic_info',),
    'self_assessment' => array(
      'variables' => array('rreid' => NULL, 'node' => NULL),
      'path' => drupal_get_path('module', 'counselee') . '/templates',
      'template' => 'self_assessment',),
    'view_assessment' => array(
      'variables' => array('rreid' => NULL),
      'path' => drupal_get_path('module', 'counselee') . '/templates',
      'template' => 'view_assessment_item',),
    'page_audit_review_question' => array(
      'variables' => array(
        'node' => NULL,),
      'path' => drupal_get_path('module', 'counselee') . '/templates',
      'template' => 'page_audit_review_question',),
    'page_audit_review_summay_description' => array(
      'variables' => array(
        'node' => NULL,),
      'path' => drupal_get_path('module', 'counselee') . '/templates',
      'template' => 'page_audit_review_summay_description',),
    'page_audit_review_btn' => array(
      'variables' => array(
        'rreid' => NULL,),
      'path' => drupal_get_path('module', 'counselee') . '/templates',
      'template' => 'page_audit_review_btn',),
  );
}

/**
 * select_reviewer_status_from_BD
 * @return type
 * @author Mars
 */
function select_reviewer_status_from_BD() {
  $status_info = array();
  $cur_user_name = get_current_user_name();
  if (module_exists('counsellor') && module_enable(array('counsellor'))) {
    $result = get_counselees_from_db();
    // counselee login
    $my_name = array($cur_user_name);
    $my_review_status = get_status_from_db($my_name);
    if (count($result) != '0') {

      // counsellor login
      $counselee_name_array = generate_selected_participant_array($result);
      $counselee_status = get_status_from_db($counselee_name_array);
      foreach ($counselee_status as $key => $status) {
        array_push($my_review_status, $status);
      }

// counsellor login
      $employee_name_array = generate_selected_participant_array($result);
    }
    else {
// counselee login
    }
  }
  $status_info = $my_review_status;
  return $status_info;
}

/**
 * This funciton is for counselee to select peers
 * 
 * 
 * @param string $user counselee name
 * @param int $reviewtype The review type
 * @return result The review to select peers  
 * @author Palmer
 */
function counselee_select_peers($userType, $userName) {

  if ($userType === 'counselee') {
    $selPeersStatus = array(0, 2);
    $counselee_query = db_select('prs_rel_review_employee', 'review');
    $counselee_query->join('prs_general', 'general', 'general.prid=review.prid');
    $counselee_query->addField('review', 'employeeName');
    $counselee_query->addField('review', 'rreid');
    $counselee_query->addField('general', 'type');
    $counselee_query->addField('general', 'description');
    $counselee_query->condition('review.employeeName', $userName);
    $counselee_query->condition('review.rstatus', 1);
    //$counselee_query->condition('general.type', $reviewType);
    $counselee_query->condition('review.spstatus', $selPeersStatus, 'in');

    $dataset = $counselee_query->execute()->fetchAll();
  }
  else if ($userType === 'counselor') {
    $selPeersStatus = array(0, 1);
    $counselor_query = db_select('prs_rel_employee_counselor_gm', 'relation');
    $counselor_query->join('prs_rel_review_employee', 'review', 'relation.employeeName = review.employeeName');
    $counselor_query->join('prs_general', 'general', 'general.prid=review.prid');
    $counselor_query->addField('relation', 'employeeName');
    $counselor_query->addField('review', 'rreid');
    $counselor_query->addField('general', 'type');
    $counselor_query->addField('general', 'description');
    $counselor_query->condition('relation.counselorName', $userName);
    $counselor_query->condition('review.rstatus', 1);
    //$counselor_query->condition('general.type', $reviewType);
    $counselor_query->condition('review.spstatus', $selPeersStatus, 'in');

    $dataset = $counselor_query->execute()->fetchAll();
  }

  $result = array();
  $index = 0;
  foreach ($dataset as $node) {
    $employeeName = $node->employeeName;
    $rreid = $node->rreid;
    $reviewtype = $node->type;
    $description = $node->description;
    $temp = array('employeeName' => $employeeName, 'rreid' => $rreid, 'reviewType' => $reviewtype, 'description' => $description);
    $result[$index++] = $temp;
  }
  return $result;
}

/**
 * get_status_from_db
 * 
 * @param type $employeeName
 * @return type
 * @author Mars
 */
function get_status_from_db($employeeName) {
//   $cur_user_name = get_current_user_name();
  $query = db_select('prs_rel_review_employee', 're');
  $query->join('prs_general', 'pg', 'pg.prid=re.prid');
  $query->fields('re', array('employeeName', 'rreid', 'rstatus'));
  $query->addField('pg', 'period_start');
  $query->addField('pg', 'period_end');
  $query->addField('pg', 'type');
  $query->addField('pg', 'description');
  $query->condition('re.employeeName', $employeeName, 'in');
  $query->orderBy('re.rstatus', 'ASC');
  $result = $query->execute()->fetchAll();
  return $result;
}

/**
 * This function is to show the user to do peers review
 * 
 * @param string $userName the current user login name
 * @return array Current user to do reviewList
 */
function counselee_do_peersreview($userName) {

  $status = Array(1, 2, 3, 4, 5, 6);
  $peers_query = db_select('prs_rel_provider_employee', 'provider');
  $peers_query->join('prs_general', 'general', 'general.prid = provider.prid');
  $peers_query->join('prs_rel_review_employee', 'review', 'review.rreid = provider.rreid');
  $peers_query->addField('general', 'type');
  $peers_query->addField('provider', 'token');
  $peers_query->addField('provider', 'employeeName');
  $peers_query->addField('provider', 'rpeid');
  $peers_query->addField('general', 'description');
  $peers_query->condition('provider.providerName', $userName);
  $peers_query->condition('provider.status', 0);
  $peers_query->condition('review.rstatus', $status, 'in');
  $dataset = $peers_query->execute()->fetchAll();

  $result = array();
  $index = 0;
  foreach ($dataset as $node) {
    $employeeName = $node->employeeName;
    $rpeid = $node->rpeid;
    $reviewtype = $node->type;
    $description = $node->description;
    $token = $node->token;
    $temp = array('employeeName' => $employeeName,
      'rpeid' => $rpeid,
      'reviewType' => $reviewtype,
      'description' => $description,
      'token' => $token,
    );
    $result[$index++] = $temp;
  }
  return $result;
}

// function get_all_employees_from_db() {
//   if (module_exists('counsellor') && module_enable(array('counsellor'))) {
//     $cur_user_name = get_current_user_name();
//     $result = array();
//     $query = db_select('prs_rel_employee_counselor_gm', 'precg');
//     $query->fields('precg', array('employeeName'));
//     $query->condition('precg.employeeName', $cur_user_name, '!=');
//     $query->orderBy('precg.employeeName', 'ASC');
//     $result = $query->execute()->fetchAll();
//   } 
//   return $result;
// }

/**
 * get_all_employees_from_db
 * the result excludes the current login user
 * @return type
 */
function get_all_employees_from_db() {
  $cur_user_name = get_current_user_name();
  $query = db_select('prs_rel_employee_counselor_gm', 'precg');
  $query->fields('precg', array('employeeName'));
  $query->condition('precg.employeeName', $cur_user_name, '!=');
  $query->orderBy('precg.employeeName', 'ASC');
  $result = $query->execute()->fetchAll();
  $employees = generate_array($result, 'employeeName');
  return $employees;
}

/**
 * get_all_peer_candidates_from_db
 * the result will not contain the corresponding reviewee of the param $rreid
 * @param int $rreid
 * @return array $candidates
 * */
function get_all_peer_candidates_from_db($rreid) {
  $reviewee = get_reviewee_from_db($rreid);
  $query = db_select('prs_rel_employee_counselor_gm', 'precg');
  $query->fields('precg', array('employeeName'));
  $query->condition('precg.employeeName', $reviewee, '!=');
  $query->orderBy('precg.employeeName', 'ASC');
  $result = $query->execute()->fetchAll();
  $candidates = generate_array($result, 'employeeName');
  return $candidates;
}

/**
 * get_selected_peers_from_db
 * @param $rreid
 * @return $selected_array
 * */
function get_selected_peers_from_db($rreid) {
  $query = db_select('prs_rel_provider_employee');
  $query->fields('prs_rel_provider_employee', array('providerName'));
  $query->condition('prs_rel_provider_employee.rreid', $rreid, '=');
  $query->where('prs_rel_provider_employee.providerName!=prs_rel_provider_employee.employeeName');
  $query->orderBy('prs_rel_provider_employee.providerName', 'ASC');
  $result = $query->execute()->fetchAll();
  $selected_array = generate_array($result, 'providerName');
  return $selected_array;
}

/**
 * get_unselected_peers_from_db
 * @param string $reviewee
 * @return array $selected_array
 * */
function get_unselected_peers_from_db($reviewee, $selected_array) {
  $count = count($selected_array);
  $query = db_select('prs_reviewers');
  $query->fields('prs_reviewers', array('login_name'));
  $query->condition('prs_reviewers.login_name', $reviewee, '!=');
  if ($count != 0) {
    $query->condition('prs_reviewers.login_name', $selected_array, 'not in');
  }
  $query->orderBy('prs_reviewers.login_name', 'ASC');
  $result = $query->execute()->fetchAll();
  $unselected_array = generate_array($result, 'login_name');
  return $unselected_array;
}

/**
 * get_reviewee_from_db
 * @param int $rreid
 * @return type $reviewee
 * */
function get_reviewee_from_db($rreid) {
  $query = db_select('prs_rel_review_employee', 'prre');
  $query->fields('prre', array('employeeName'));
  $query->condition('prre.rreid', $rreid, '=');
  $result = $query->execute()->fetchAll();
  return $result['0']->employeeName;
}

/**
 * get_review_spstatus_from_db
 * @param int $rreid
 * @return type $spstatus
 * */
function get_review_spstatus_from_db($rreid) {
  $query = db_select('prs_rel_review_employee', 'prre');
  $query->fields('prre', array('spstatus'));
  $query->condition('prre.rreid', $rreid, '=');
  $result = $query->execute()->fetchAll();
  return $result['0']->spstatus;
}

/**
 * print_render_tabs
 * this   func is to switch the self assessment tab displayed or hidden when differenet users login. 
 * This tab will remain hidden until the login user is the counselor of this reviewee and the counselee has 
 * submitted his/her self assessment form (rstatus >= 2 ).
 * @param $tabs
 * */
function print_render_tabs($tabs) {
  // fetch the review id from the tab info
  $tmp = $tabs['tabs']['output']['2']['#link']['href'];
  $pos = strrpos($tmp, '/');
  // prepare the arguments
  $rreid = substr($tmp, $pos + 1);
  $userId_flag = get_user_identity($rreid);
  $rstatus = get_review_status_from_db($rreid);
  print render($tabs['tabs']['output']['0']);
  print render($tabs['tabs']['output']['1']);
  // identify the user and review status
  if (_is_assessment_editable($userId_flag, $rstatus)) {
    print render($tabs['tabs']['output']['2']);
  }
  else if (_is_assessment_visible_for_counselor($rstatus)) {
    print render($tabs['tabs']['output']['3']);
  }
  else if ($userId_flag == 0) {
    print render($tabs['tabs']['output']['3']);
  }
}

/**
 * is_assessment_editable
 * this func is to judge whether the self assessment is editable according to the login user identity and the review status.
 * @param int $rreid
 * @return bool
 * */
function _is_assessment_editable($userId_flag, $rstatus) {
  // while login user is the counselee of review and status is REVIEW_IN_DRAFT
  if ($userId_flag == 0 && $rstatus == 1) {
    return TRUE;
  }
  else {
    return FALSE;
  }
}

/**
 * _is_assessment_visible_for_counselor
 * this func is to identify whether the self assessment is visible for counselor. When the status is 
 * REVIEW_IN_DRAFT, the result is no
 * */
function _is_assessment_visible_for_counselor($rstatus) {
  if ($rstatus > 1 && $rstatus <= 6) {
    return TRUE;
  }
  else {
    return FALSE;
  }
}

/**
 *
 * @param type $node
 * @param type $submission 
 */
function counselee_webform_submission_update($node, $submission) {
  _alert_after_submited($node, $submission);
}

/**
 *
 * @param type $node
 * @param type $submission 
 */
function counselee_webform_submission_insert($node, $submission) {
  _alert_after_submited($node, $submission);
}

function _alert_after_submited($node, $submission) {
  if (is_selfreview($node->webform['nid'])) {
    //self review
    if (has_submitted($node)) {
      if (modify_feedback_status($node->webform['nid'])) {
        if (modify_review_status($node->webform['nid'], $rreid)) {
          //======================================send email===============
          $cur_counselee_name = get_current_user_name();
          $counselor_name = my_counselor_gm_name($cur_counselee_name);
          $cur_counselor_name = $counselor_name[0]->counselorName;
//  dd('$cur_counselor_name');
//  dd($cur_counselor_name);
          if ($cur_counselor_name != '') {
            $my_counselor_address = select_email_from_prs_reviewers(array($cur_counselor_name));
//            dd($my_counselor_address,'$my_counselor_address');
            foreach ($my_counselor_address as $counseloraddress) {
              $counselor_address = $counseloraddress->mail;
            }
            $reviews = get_basic_review_information($rreid);
//            dd($review,'$review');
//            dd($rreid,'$rreid');
            foreach ($reviews as $review) {
              $description = $review->description;
            }
            $counselor_parems = array('username' => format_login_name($cur_counselor_name), 'reviewname' => $description, 'url' => 'http://' . $_SERVER['HTTP_HOST'] . base_path() . 'watchstatus/viewassessment/' . $rreid, 'counselee' => format_login_name($cur_counselee_name));

            mail_sender_template_adapter($counselor_address, $counselor_parems, 2);
            //======================================send email end============
          }
        }
      }
    }
  }
  else {
    // peer review
    if (has_submitted($node)) {
      modify_feedback_status($node->webform['nid']);
    }
  }
}

function has_submitted($node) {
  $query = db_select('webform_submissions', 's');
  $query->fields('s');
  $query->condition('s.nid', $node->webform['nid']);
  $result = $query->execute()->fetchAll();
  foreach ($result as $submit) {
    if ($submit->is_draft == 0) {
      return true;
    }
  }
  return false;
}

function modify_feedback_status($nid) {
  $count = db_update('prs_rel_provider_employee')
      ->fields(array(
        'status' => 1,
      ))
      ->condition('nid', $nid)
      ->execute();
//  dd($count,'$count');
  if ($count > 0) {
    return TRUE;
  }
  else {
    return FALSE;
  }
}

function modify_review_status($nid, &$rreid_rev) {
  $query = db_select('prs_rel_provider_employee', 'prre');
  $query->fields('prre');
  $query->condition('prre.nid', $nid);
  $results = $query->execute()->fetchAll();
  foreach ($results as $result) {

    $rreid = $result->rreid;
    $rreid_rev = $rreid;
  }

  $count = db_update('prs_rel_review_employee')
      ->fields(array(
        'rstatus' => 2,
      ))
      ->condition('rreid', $rreid)
      ->execute();
//  dd($count, '$count');
  if ($count > 0) {
    return TRUE;
  }
  else {
    return FALSE;
  }
}

/**
 * Get finished self review list
 * 
 */
function get_self_review_finished_list($counselor) {
  $query = db_select('prs_rel_review_employee', 'review');
  $query->join('prs_general', 'general', 'general.prid = review.prid');
  $query->join('prs_rel_employee_counselor_gm', 'relation', 'relation.employeename = review.employeename');
  $query->addField('general', 'type');
  $query->addField('review', 'rreid');
  $query->addField('review', 'employeename');
  $query->addField('general', 'description');
  $query->condition('relation.counselorname', $counselor);
  $query->condition('review.rstatus', 2); // 2 Stand for self reivew has finished

  $dataset = $query->execute()->fetchAll();

  $result = array();
  $index = 0;
  foreach ($dataset as $node) {
    $employeeName = $node->employeename;
    $rreid = $node->rreid;
    $reviewtype = $node->type;
    $description = $node->description;
    $temp = array('employeeName' => $employeeName, 'rreid' => $rreid, 'reviewType' => $reviewtype, 'description' => $description);
    $result[$index++] = $temp;
  }
  return $result;
}

function get_review_token_from_db($rreid) {
  $reviewee = get_reviewee_from_db($rreid);
  $query = db_select('prs_rel_provider_employee', 'prpe')
          ->fields('prpe', array('providerName', 'token'))
          ->condition('prpe.rreid', $rreid)
          ->condition('prpe.providerName', $reviewee, '!=')
          ->orderBy('prpe.providerName', 'ASC')
          ->execute()->fetchAll();
  $tuple = array();
  foreach ($query as $item) {
    $temp = array(
      $item['providerName'] => $item['token']);
    array_push($tuple, $temp);
  }
  return $query;
}

function get_counselor_submittion_from_db($rreid) {
  if (module_exists('common') && module_enable(array('common'))) {
    $nid = get_provider_info($rreid);
    $csiid = get_last_sid_by_nid($nid);
  }
  $query = db_select('prs_counselor_submit_info', 'pcsi')
      ->join('prs_counselor_submit_data', 'pcsd', 'pcsd.csiid=pcsi.csiid')
      ->fields('pcsi', array('pcsi.csiid'))
      ->addField('pcsi', 'nid')
      ->addField('pcsi', 'submitTimestamp')
      ->addField('pcsi', 'isDraft')
      ->addField('pcsd', 'count')
      ->addField('pcsd', 'header')
      ->addField('pcsd', 'rating')
      ->addField('pcsd', 'comment')
      ->condition('pcsi.nid', $nid)
      ->condition('pcsi.csiid', $csiid)
      ->orderBy('pcsd.count', 'ASC');
  $result = $query->execute()->fetchAll();
  return $result;
}

/**
 * Get the list of the confirm
 * 
 */
function get_confirm_review_result($username) {

  $query = db_select('prs_rel_review_employee', 'review');
  $query->join('prs_general', 'general', 'general.prid = review.prid');
  $query->addField('review', 'prid');
  $query->addField('review', 'rreid');
  $query->addField('general', 'description');
  $query->addField('general', 'type');
  $query->condition('review.employeeName', $username);
  $query->condition('review.rstatus', 3); // 3 stand for counselor has approved the review

  $dataset = $query->execute()->fetchAll();

  $result = array();
  $index = 0;
  foreach ($dataset as $node) {
    $prid = $node->prid;
    $rreid = $node->rreid;
    $reviewtype = $node->type;
    $description = $node->description;
    $temp = array('prid' => $prid, 'rreid' => $rreid, 'reviewType' => $reviewtype, 'description' => $description);
    $result[$index++] = $temp;
  }
  return $result;
}